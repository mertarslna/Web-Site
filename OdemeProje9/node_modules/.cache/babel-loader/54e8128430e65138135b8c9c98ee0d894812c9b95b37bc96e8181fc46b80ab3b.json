{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\OdemeProje9\\\\src\\\\components\\\\Auth\\\\OTP.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { otpVerify } from \"../../api/paythor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTP = ({\n  onSuccess\n}) => {\n  _s();\n  const [otp, setOtp] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const email = localStorage.getItem(\"email\") || \"\";\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    try {\n      const result = await otpVerify({\n        target: email,\n        otp\n      });\n      if (result.status === \"success\") {\n        onSuccess();\n      } else {\n        setError(result.message || \"Doğrulama başarısız\");\n      }\n    } catch (err) {\n      setError(\"Bir hata oluştu\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OTP Do\\u011Frulama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"OTP Kodu\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Doğrulanıyor...\" : \"Doğrula\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(OTP, \"31F2ltxUraT9K91jGkZSNPvYnPg=\");\n_c = OTP;\nexport default OTP;\nvar _c;\n$RefreshReg$(_c, \"OTP\");","map":{"version":3,"names":["React","useState","otpVerify","jsxDEV","_jsxDEV","OTP","onSuccess","_s","otp","setOtp","loading","setLoading","error","setError","email","localStorage","getItem","handleSubmit","e","preventDefault","result","target","status","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/OdemeProje9/src/components/Auth/OTP.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { otpVerify } from \"../../api/paythor\";\r\n\r\ninterface OTPProps {\r\n  onSuccess: () => void;\r\n}\r\n\r\nconst OTP: React.FC<OTPProps> = ({ onSuccess }) => {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const email = localStorage.getItem(\"email\") || \"\";\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const result = await otpVerify({ target: email, otp });\r\n      if (result.status === \"success\") {\r\n        onSuccess();\r\n      } else {\r\n        setError(result.message || \"Doğrulama başarısız\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Bir hata oluştu\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <h2>OTP Doğrulama</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"OTP Kodu\" value={otp} onChange={e => setOtp(e.target.value)} required />\r\n        <button type=\"submit\" disabled={loading}>{loading ? \"Doğrulanıyor...\" : \"Doğrula\"}</button>\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTP; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM9C,MAAMC,GAAuB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAEjD,MAAMC,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBR,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMO,MAAM,GAAG,MAAMlB,SAAS,CAAC;QAAEmB,MAAM,EAAEP,KAAK;QAAEN;MAAI,CAAC,CAAC;MACtD,IAAIY,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;QAC/BhB,SAAS,CAAC,CAAC;MACb,CAAC,MAAM;QACLO,QAAQ,CAACO,MAAM,CAACG,OAAO,IAAI,qBAAqB,CAAC;MACnD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZX,QAAQ,CAAC,iBAAiB,CAAC;IAC7B;IACAF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEP,OAAA;IAAKqB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA;MAAM2B,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BtB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAE1B,GAAI;QAAC2B,QAAQ,EAAEjB,CAAC,IAAIT,MAAM,CAACS,CAAC,CAACG,MAAM,CAACa,KAAK,CAAE;QAACE,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxG1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACK,QAAQ,EAAE3B,OAAQ;QAAAgB,QAAA,EAAEhB,OAAO,GAAG,iBAAiB,GAAG;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,EACNlB,KAAK,iBAAIR,OAAA;MAAKqB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjCIF,GAAuB;AAAAiC,EAAA,GAAvBjC,GAAuB;AAmC7B,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}