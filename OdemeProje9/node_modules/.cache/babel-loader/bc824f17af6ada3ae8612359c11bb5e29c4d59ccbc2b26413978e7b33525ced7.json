{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\OdemeProje9\\\\src\\\\components\\\\Auth\\\\ResetPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPanel = ({\n  email: initialEmail,\n  phone: initialPhone,\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState(initialEmail);\n  const [phone, setPhone] = useState(initialPhone);\n  const [otp, setOtp] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    setSuccess(\"\");\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^A-Za-z0-9]).{8,}$/;\n    if (!passwordRegex.test(newPassword)) {\n      setError(\"Yeni şifreniz en az 8 karakter olmalı ve büyük harf, küçük harf, rakam ve özel karakter içermelidir.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"https://api.paythor.com/auth/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          resetpassword: {\n            email: email,\n            phone: phone,\n            otp_code: otp,\n            new_password: newPassword\n          }\n        })\n      });\n      const data = await response.json();\n      if (data.status === \"success\") {\n        setSuccess(\"Şifreniz başarıyla sıfırlandı. Giriş yapabilirsiniz.\");\n        setTimeout(onLogin, 1500);\n      } else {\n        setError(data.message || \"Şifre sıfırlanamadı.\");\n      }\n    } catch (e) {\n      setError(e.message || \"Bir hata oluştu\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u015Eifre S\\u0131f\\u0131rla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"E-posta\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Telefon\",\n        value: phone,\n        onChange: e => setPhone(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"OTP Kodu\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Yeni \\u015Eifre\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Sıfırlanıyor...\" : \"Şifreyi Sıfırla\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogin,\n      children: \"Giri\\u015Fe D\\xF6n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPanel, \"ev/YlMy2WH+b4ei9o0zEoy/Ivc0=\");\n_c = ResetPanel;\nexport default ResetPanel;\nvar _c;\n$RefreshReg$(_c, \"ResetPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPanel","email","initialEmail","phone","initialPhone","onLogin","_s","setEmail","setPhone","otp","setOtp","newPassword","setNewPassword","loading","setLoading","error","setError","success","setSuccess","handleSubmit","e","preventDefault","passwordRegex","test","response","fetch","method","headers","body","JSON","stringify","resetpassword","otp_code","new_password","data","json","status","setTimeout","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/OdemeProje9/src/components/Auth/ResetPanel.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface ResetPanelProps {\r\n  email: string;\r\n  phone: string;\r\n  onLogin: () => void;\r\n}\r\n\r\nconst ResetPanel: React.FC<ResetPanelProps> = ({ email: initialEmail, phone: initialPhone, onLogin }) => {\r\n  const [email, setEmail] = useState(initialEmail);\r\n  const [phone, setPhone] = useState(initialPhone);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^A-Za-z0-9]).{8,}$/;\r\n    if (!passwordRegex.test(newPassword)) {\r\n      setError(\"Yeni şifreniz en az 8 karakter olmalı ve büyük harf, küçük harf, rakam ve özel karakter içermelidir.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"https://api.paythor.com/auth/reset-password\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          resetpassword: {\r\n            email: email,\r\n            phone: phone,\r\n            otp_code: otp,\r\n            new_password: newPassword\r\n          }\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      if (data.status === \"success\") {\r\n        setSuccess(\"Şifreniz başarıyla sıfırlandı. Giriş yapabilirsiniz.\");\r\n        setTimeout(onLogin, 1500);\r\n      } else {\r\n        setError(data.message || \"Şifre sıfırlanamadı.\");\r\n      }\r\n    } catch (e: any) {\r\n      setError(e.message || \"Bir hata oluştu\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <h2>Şifre Sıfırla</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"email\" placeholder=\"E-posta\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n        <input type=\"text\" placeholder=\"Telefon\" value={phone} onChange={e => setPhone(e.target.value)} required />\r\n        <input type=\"text\" placeholder=\"OTP Kodu\" value={otp} onChange={e => setOtp(e.target.value)} required />\r\n        <input type=\"password\" placeholder=\"Yeni Şifre\" value={newPassword} onChange={e => setNewPassword(e.target.value)} required />\r\n        <button type=\"submit\" disabled={loading}>{loading ? \"Sıfırlanıyor...\" : \"Şifreyi Sıfırla\"}</button>\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {success && <div className=\"success\">{success}</div>}\r\n      <button onClick={onLogin}>Girişe Dön</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}